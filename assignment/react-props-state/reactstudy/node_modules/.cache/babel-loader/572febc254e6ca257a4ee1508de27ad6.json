{"ast":null,"code":"var _jsxFileName = \"/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/ProductDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport detail from '../data/productDetail';\nimport { useParams } from 'react-router-dom';\nimport \"../css/Detail.css\";\nimport { ProdContainer, ProdName } from \"../styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductDetail = () => {\n  _s();\n\n  //useParams()=> 현재 url 의 붙어 있는 url parameter를 인식하는 역할\n  //'detailID'에 현재 url 파라미터를 담게 됌\n  const {\n    detailID\n  } = useParams();\n  const product = detailID.product; //map함수를 사용하면 리스트에 저장된 모든 데이터 값이 출력되지만,\n  //filter함수를 사용하면 상세 페이지에 해당하는 특정 데이터 값만을 선택적으로 출력가능. \n\n  const which = detail.detailProd.filter(one => one.product === product)[0];\n  return (\n    /*#__PURE__*/\n    // <> {detail.detailProd.map((product)=>(\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProdContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", detailID, \"\\uBC88 \\uC0C1\\uD488\\uC5D0 \\uB300\\uD55C \\uC0C1\\uC138\\uD398\\uC774\\uC9C0 \\uC785\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: which.img,\n          alt: \"no img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProdName, {\n          children: [\" \", which.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) // ))} \n    // </> \n\n  );\n};\n\n_s(ProductDetail, \"ZGNKp+j7ou1D/qRuN6NZDObEo3Y=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","detail","useParams","ProdContainer","ProdName","ProductDetail","detailID","product","which","detailProd","filter","one","img","title"],"sources":["/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/ProductDetail.js"],"sourcesContent":["import React from 'react'\nimport detail from '../data/productDetail'\nimport {useParams} from 'react-router-dom';\nimport \"../css/Detail.css\";\n\nimport {\n    ProdContainer,\n    ProdName,\n} from \"../styled\"\n\nconst ProductDetail = () => {\n    //useParams()=> 현재 url 의 붙어 있는 url parameter를 인식하는 역할\n    //'detailID'에 현재 url 파라미터를 담게 됌\n    const {detailID} = useParams();\n    const product = detailID.product;\n\n    //map함수를 사용하면 리스트에 저장된 모든 데이터 값이 출력되지만,\n    //filter함수를 사용하면 상세 페이지에 해당하는 특정 데이터 값만을 선택적으로 출력가능. \n    const which = detail.detailProd.filter((one)=>one.product===product)[0];\n\n    return (\n    // <> {detail.detailProd.map((product)=>(\n        <div>\n            <ProdContainer>\n            <h3> {detailID}번 상품에 대한 상세페이지 입니다.</h3>\n            <img src={which.img} alt='no img'></img>\n            <ProdName> {which.title} </ProdName>\n            \n            \n            </ProdContainer>\n        </div>\n    // ))} \n    // </> \n    )\n}\n\nexport default ProductDetail;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,mBAAP;AAEA,SACIC,aADJ,EAEIC,QAFJ,QAGO,WAHP;;;AAKA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB;EACA;EACA,MAAM;IAACC;EAAD,IAAaJ,SAAS,EAA5B;EACA,MAAMK,OAAO,GAAGD,QAAQ,CAACC,OAAzB,CAJwB,CAMxB;EACA;;EACA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,UAAP,CAAkBC,MAAlB,CAA0BC,GAAD,IAAOA,GAAG,CAACJ,OAAJ,KAAcA,OAA9C,EAAuD,CAAvD,CAAd;EAEA;IAAA;IACA;IACI;MAAA,uBACI,QAAC,aAAD;QAAA,wBACA;UAAA,gBAAMD,QAAN;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAK,GAAG,EAAEE,KAAK,CAACI,GAAhB;UAAqB,GAAG,EAAC;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA,QAAC,QAAD;UAAA,gBAAYJ,KAAK,CAACK,KAAlB;QAAA;UAAA;UAAA;UAAA;QAAA,QAHA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,CAWA;IACA;;EAZA;AAcH,CAxBD;;GAAMR,a;UAGiBH,S;;;KAHjBG,a;AA0BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}