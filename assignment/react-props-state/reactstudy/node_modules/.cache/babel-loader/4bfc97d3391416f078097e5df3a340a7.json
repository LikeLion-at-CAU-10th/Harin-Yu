{"ast":null,"code":"var _jsxFileName = \"/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/Boxb.js\",\n    _s = $RefreshSig$();\n\n//map 함수 사용할 때 : 박스 별로 키 값을 부여->고유한 값으로 식별 가능\nimport React, { useEffect, useState } from 'react'; // import detail from \"../data/productDetail.js\"\n\nimport \"../css/Boxb.css\";\nimport LikeButton from \"../components/LikeButton\";\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { StyledBox, TextContainer, Button } from \"../styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Boxb = () => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleClick = url => {\n    navigate(url);\n  };\n\n  const [productList, setProductList] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://9abff952-ea24-484a-ad0a-e7167e39a5fb.mock.pstmn.io/session5\").then(response => {\n      setProductList(response.data.products);\n    });\n  });\n  console.log(productList); // if(!productList){ return null;}\n  // const handleClick=(url, id)=>{\n  //     navigate(url, {state:productList[id-1]})\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: productList.map(product => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StyledBox, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.img,\n            alt: \"no imag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textitem\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: product.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"address\",\n            children: [\" \", product.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\" \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(LikeButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleClick('/detail/' + product.id),\n            children: \" \\uC0C1\\uC138\\uBCF4\\uAE30 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false))\n  }, void 0, false);\n};\n\n_s(Boxb, \"juTdDZdGLEfXq4UBE/TOEgWGtgk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Boxb;\nexport default Boxb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Boxb\");","map":{"version":3,"names":["React","useEffect","useState","LikeButton","useNavigate","Link","axios","StyledBox","TextContainer","Button","Boxb","navigate","handleClick","url","productList","setProductList","get","then","response","data","products","console","log","map","product","img","title","address","price","id"],"sources":["/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/Boxb.js"],"sourcesContent":["//map 함수 사용할 때 : 박스 별로 키 값을 부여->고유한 값으로 식별 가능\nimport React, {useEffect, useState} from 'react';\n// import detail from \"../data/productDetail.js\"\nimport \"../css/Boxb.css\"\nimport LikeButton from \"../components/LikeButton\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport axios from 'axios';\n\nimport {\n    StyledBox,\n    TextContainer,\n    Button,\n} from \"../styled\"\n\n\nconst Boxb = () => {\n    const navigate = useNavigate();\n    const handleClick =(url) => {\n        navigate(url);\n    };\n\n    const [productList, setProductList] = useState([]);\n\n    useEffect(()=>{\n        axios.get(\"https://9abff952-ea24-484a-ad0a-e7167e39a5fb.mock.pstmn.io/session5\")\n        .then(response=>{\n            setProductList(response.data.products);\n\n        })\n    })\n    console.log(productList);\n\n    // if(!productList){ return null;}\n    // const handleClick=(url, id)=>{\n    //     navigate(url, {state:productList[id-1]})\n    // }\n    \n    return <>{productList.map((product)=>(\n        <>\n\n            <StyledBox key={product.id}>\n                <Link to= \"\" >\n                    <img src={product.img} alt=\"no imag\"></img>\n                    </Link>\n                \n                    <textitem>\n                        <p><b>{product.title}</b></p>\n                        <p className=\"address\"> {product.address}</p>\n                        <TextContainer>\n                            <p className=\"price\"> {product.price}</p>\n                            <LikeButton />\n                        </TextContainer>\n\n                        {/* 상세보기 버튼 */}\n                        <Button onClick={()=> handleClick('/detail/' + product.id)}> 상세보기 </Button> \n                    </textitem>\n            \n            </StyledBox>\n\n        </>\n        ))}\n        </>\n    \n};\n\nexport default Boxb"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,OAAO,iBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,WAAR,EAAqBC,IAArB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,SADJ,EAEIC,aAFJ,EAGIC,MAHJ,QAIO,WAJP;;;;AAOA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EACA,MAAMQ,WAAW,GAAGC,GAAD,IAAS;IACxBF,QAAQ,CAACE,GAAD,CAAR;EACH,CAFD;;EAIA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAI;IACVK,KAAK,CAACU,GAAN,CAAU,qEAAV,EACCC,IADD,CACMC,QAAQ,IAAE;MACZH,cAAc,CAACG,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAd;IAEH,CAJD;EAKH,CANQ,CAAT;EAOAC,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAfe,CAiBf;EACA;EACA;EACA;;EAEA,oBAAO;IAAA,UAAGA,WAAW,CAACS,GAAZ,CAAiBC,OAAD,iBACtB;MAAA,uBAEI,QAAC,SAAD;QAAA,wBACI,QAAC,IAAD;UAAM,EAAE,EAAE,EAAV;UAAA,uBACI;YAAK,GAAG,EAAEA,OAAO,CAACC,GAAlB;YAAuB,GAAG,EAAC;UAA3B;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAKQ;UAAA,wBACI;YAAA,uBAAG;cAAA,UAAID,OAAO,CAACE;YAAZ;cAAA;cAAA;cAAA;YAAA;UAAH;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAG,SAAS,EAAC,SAAb;YAAA,gBAAyBF,OAAO,CAACG,OAAjC;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,aAAD;YAAA,wBACI;cAAG,SAAS,EAAC,OAAb;cAAA,gBAAuBH,OAAO,CAACI,KAA/B;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,UAAD;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eASI,QAAC,MAAD;YAAQ,OAAO,EAAE,MAAKhB,WAAW,CAAC,aAAaY,OAAO,CAACK,EAAtB,CAAjC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATJ;QAAA;UAAA;UAAA;UAAA;QAAA,QALR;MAAA,GAAgBL,OAAO,CAACK,EAAxB;QAAA;QAAA;QAAA;MAAA;IAFJ,iBADM;EAAH,iBAAP;AA0BH,CAhDD;;GAAMnB,I;UACeN,W;;;KADfM,I;AAkDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}