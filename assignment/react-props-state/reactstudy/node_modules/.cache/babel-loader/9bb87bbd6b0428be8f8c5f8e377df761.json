{"ast":null,"code":"var _jsxFileName = \"/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/ProductDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport detail from '../data/productDetail';\nimport { useParams } from 'react-router-dom';\nimport \"../css/Detail.css\";\nimport { ProdContainer, ProdName, ProdDesc, AboutDetailLeft, AboutDetailRight } from \"../styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductDetail = () => {\n  _s();\n\n  //useParams()=> 현재 url 의 붙어 있는 url parameter를 인식하는 역할\n  //'detailID'에 현재 url 파라미터를 담게 됌\n  const {\n    detailID\n  } = useParams();\n  const id = detailID; //map함수를 사용하면 리스트에 저장된 모든 데이터 값이 출력되지만,\n  //filter함수를 사용하면 상세 페이지에 해당하는 특정 데이터 값만을 선택적으로 출력가능. \n\n  const which = detail.detailProd.filter(one => one.id === id)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProdContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", detailID, \"\\uBC88 \\uC0C1\\uD488\\uC5D0 \\uB300\\uD55C \\uC0C1\\uC138\\uD398\\uC774\\uC9C0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imgDetail\",\n        src: which.img,\n        alt: \"no img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProdName, {\n        children: [\" \", which.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProdDesc, {\n        children: [/*#__PURE__*/_jsxDEV(AboutDetailLeft, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" \\uAC00\\uACA9 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AboutDetailRight, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", which.price, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductDetail, \"ZGNKp+j7ou1D/qRuN6NZDObEo3Y=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductDetail;\nexport default ProductDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","detail","useParams","ProdContainer","ProdName","ProdDesc","AboutDetailLeft","AboutDetailRight","ProductDetail","detailID","id","which","detailProd","filter","one","img","title","price"],"sources":["/Users/harinyu/Desktop/likelionGit/Harin-Yu/assignment/react-props-state/reactstudy/src/pages/ProductDetail.js"],"sourcesContent":["import React from 'react'\nimport detail from '../data/productDetail'\nimport {useParams} from 'react-router-dom';\nimport \"../css/Detail.css\";\n\nimport {\n    ProdContainer,\n    ProdName,\n    ProdDesc,\n    AboutDetailLeft,\n    AboutDetailRight,\n} from \"../styled\"\n\nconst ProductDetail = () => {\n    //useParams()=> 현재 url 의 붙어 있는 url parameter를 인식하는 역할\n    //'detailID'에 현재 url 파라미터를 담게 됌\n    const {detailID} = useParams();\n    const id = detailID;\n\n    //map함수를 사용하면 리스트에 저장된 모든 데이터 값이 출력되지만,\n    //filter함수를 사용하면 상세 페이지에 해당하는 특정 데이터 값만을 선택적으로 출력가능. \n    const which = detail.detailProd.filter((one)=>one.id===id)[0];\n\n    return (\n        <div>\n            <ProdContainer>\n            <h4> {detailID}번 상품에 대한 상세페이지</h4>\n            <img className=\"imgDetail\" src={which.img} alt='no img'></img>\n            <ProdName> {which.title} </ProdName>\n            <ProdDesc>\n                <AboutDetailLeft>\n                    <h3> 가격 </h3>\n                    {/* <h3> 주소 </h3>\n                    <h3> 상세정보 </h3> */}\n                </AboutDetailLeft>\n\n                <AboutDetailRight>\n                    <h3> {which.price} </h3>\n                    {/* <h3> {which.address} </h3>\n                    <h3> {which.contents} </h3> */}\n\n                </AboutDetailRight>\n\n            </ProdDesc>\n            \n            \n            \n            </ProdContainer>\n        </div>\n\n    )\n}\n\nexport default ProductDetail;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAO,mBAAP;AAEA,SACIC,aADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,eAJJ,EAKIC,gBALJ,QAMO,WANP;;;AAQA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB;EACA;EACA,MAAM;IAACC;EAAD,IAAaP,SAAS,EAA5B;EACA,MAAMQ,EAAE,GAAGD,QAAX,CAJwB,CAMxB;EACA;;EACA,MAAME,KAAK,GAAGV,MAAM,CAACW,UAAP,CAAkBC,MAAlB,CAA0BC,GAAD,IAAOA,GAAG,CAACJ,EAAJ,KAASA,EAAzC,EAA6C,CAA7C,CAAd;EAEA,oBACI;IAAA,uBACI,QAAC,aAAD;MAAA,wBACA;QAAA,gBAAMD,QAAN;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAK,SAAS,EAAC,WAAf;QAA2B,GAAG,EAAEE,KAAK,CAACI,GAAtC;QAA2C,GAAG,EAAC;MAA/C;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA,QAAC,QAAD;QAAA,gBAAYJ,KAAK,CAACK,KAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA,QAAC,QAAD;QAAA,wBACI,QAAC,eAAD;UAAA,uBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI,QAAC,gBAAD;UAAA,uBACI;YAAA,gBAAML,KAAK,CAACM,KAAZ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH,CAtCD;;GAAMT,a;UAGiBN,S;;;KAHjBM,a;AAwCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}